---------------------------------------------------------------------------

CREATE OR REPLACE PACKAGE MANAGE_PUBLIC_SYNONYM AS
  -- Created by Rodrigo Jorge - http://www.dbarj.com.br
  -- https://github.com/dbarj/sql-scripts/

  PROCEDURE CREATE_SYNONYM(SYNONYM_NAME IN VARCHAR2, OBJECT_NAME IN VARCHAR2);
  PROCEDURE DROP_SYNONYM(SYNONYM_NAME IN VARCHAR2);
END;
/

---------------------------------------------------------------------------

CREATE OR REPLACE PACKAGE BODY MANAGE_PUBLIC_SYNONYM AS
  -- Created by Rodrigo Jorge - http://www.dbarj.com.br
  -- https://github.com/dbarj/sql-scripts/

  FUNCTION CHECK_EXISTS(SYN_NAME IN VARCHAR2) RETURN BOOLEAN IS
    OUT_RESULT NUMBER;
  BEGIN
    SELECT 1
    INTO   OUT_RESULT
    FROM   DBA_SYNONYMS
    WHERE  OWNER = 'PUBLIC'
    AND    SYNONYM_NAME = SYN_NAME;
    RETURN TRUE;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN FALSE;
  END;

  FUNCTION GET_PUBLIC_SYN_OWNER(SYN_NAME IN VARCHAR2) RETURN VARCHAR2 IS
    OUT_RESULT VARCHAR2(30);
  BEGIN
    SELECT TABLE_OWNER
    INTO   OUT_RESULT
    FROM   DBA_SYNONYMS
    WHERE  OWNER = 'PUBLIC'
    AND    SYNONYM_NAME = SYN_NAME;
    RETURN OUT_RESULT;
  END;

  PROCEDURE RAISE_ERROR(IN_CODE IN NUMBER) IS
  BEGIN
    CASE IN_CODE
      WHEN -20001 THEN
        RAISE_APPLICATION_ERROR(IN_CODE, 'Synonym already exists.');
      WHEN -20002 THEN
        RAISE_APPLICATION_ERROR(IN_CODE, 'Synonym does not exist.');
      WHEN -20003 THEN
        RAISE_APPLICATION_ERROR(IN_CODE, 'Synonym is not yours.');
      ELSE
        RAISE_APPLICATION_ERROR(-20999, 'Generic error.');
    END CASE;
  END;

  PROCEDURE CREATE_SYNONYM(SYNONYM_NAME IN VARCHAR2, OBJECT_NAME IN VARCHAR2) IS
    SESS_USER VARCHAR2(30);
  BEGIN
    IF CHECK_EXISTS(SYNONYM_NAME) = TRUE
    THEN
      RAISE_ERROR(-20001);
    END IF;
    SESS_USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM ' || DBMS_ASSERT.ENQUOTE_NAME(SYNONYM_NAME, FALSE) || ' FOR ' || DBMS_ASSERT.ENQUOTE_NAME(SESS_USER, FALSE) || '.' || DBMS_ASSERT.ENQUOTE_NAME(OBJECT_NAME, FALSE);
  END;

  PROCEDURE DROP_SYNONYM(SYNONYM_NAME IN VARCHAR2) IS
    OBJ_OWNER VARCHAR2(30);
    SESS_USER VARCHAR2(30);
  BEGIN
    IF CHECK_EXISTS(SYNONYM_NAME) = FALSE
    THEN
      RAISE_ERROR(-20002);
    END IF;
    OBJ_OWNER := GET_PUBLIC_SYN_OWNER(SYNONYM_NAME);
    SESS_USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF OBJ_OWNER <> SESS_USER
    THEN
      RAISE_ERROR(-20003);
    END IF;
    EXECUTE IMMEDIATE 'DROP PUBLIC SYNONYM ' || DBMS_ASSERT.ENQUOTE_NAME(SYNONYM_NAME, FALSE);
  END;

END;
/

---------------------------------------------------------------------------
-- CREATE PUBLIC SYNONYM MANAGE_PUBLIC_SYNONYM FOR SYS.MANAGE_PUBLIC_SYNONYM;